node {
   def commit_id
   stage('Preparation') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"
     commit_id = readFile('.git/commit-id').trim()
   }
   stage('test') {
        // it is possible also to install multiple nodejs version in jenkins but then we have to manage it
        // so that`s why it is easier to run the test in dedicated container        
        def myTestContainer = docker.image('node:4.6')
        // call pull to make sure that the newest version is used (connect with docker hub) and do not use cached version
        myTestContainer.pull()
        // now execute npm in this new container, thx to this I do not need nodejs in my jenkins container
        myTestContainer.inside {
            sh 'npm install --only=dev'
            sh 'npm test'
        }
        // after executing npms the container is deleted and next stage starts
   }
   stage('test with a DB') {
        // use --rm to remove the container after using it
        def mysql = docker.image('mysql').run("-e MYSQL_ALLOW_EMPTY_PASSWORD=yes --rm") 
        def myTestContainer = docker.image('node:4.6')
        myTestContainer.pull()
        // using linking, mysql will be available at host: mysql, port: 3306
        // thx to this nodejs can connect to the mysql
        myTestContainer.inside("--link ${mysql.id}:mysql") { 
            sh 'npm install --only=dev' 
            sh 'npm test'                     
        }                                   
        mysql.stop()
        // again after using myTestContainer the container is deleted and next stage starts
   }                                     
   stage('docker build/push') {            
        docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
            def app = docker.build("kicaj29/hello-world-image:${commit_id}", '.').push()
        }                                     
   }                                       
}   